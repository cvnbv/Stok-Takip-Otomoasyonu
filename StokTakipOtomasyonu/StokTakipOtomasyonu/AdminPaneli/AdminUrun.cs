using StokTakipOtomasyonu.Business.Abstract;using StokTakipOtomasyonu.Entities.Tables;using StokTakipOtomasyonu.Entities.Utilities;using StokTakipOtomasyonu.Mail;using StokTakipOtomasyonu.Security.UserInformation;using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.IO;
using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace StokTakipOtomasyonu.AdminPaneli{    public partial class AdminUrun : Form    {        private IUrunServices _urunServices;        private IKategoriServices _kategoriServices;        private IMarkaServices _markaServices;        public AdminUrun(IUrunServices urunServices,IKategoriServices kategoriServices,IMarkaServices markaServices)        {            _urunServices = urunServices;            _kategoriServices = kategoriServices;            _markaServices = markaServices;            InitializeComponent();        }        private void AdminUrun_Load(object sender, EventArgs e)        {            KategoriComboDoldur();            MiktarTuruDoldur();            //  comboBox_kategori.Text = "Kategori Seçiniz!";            //comboBox_markaadi.Text = "Marka Seçiniz!";            comboBox_miktarcesidi.Text = "Miktar Çeşidi Seçiniz!";            DataGridDoldur();            pictureBox1.Image = Image.FromFile(@"..\..\Resimler\urun2.png");        }        #region Gride ve Comboboxları Doldurma İşlemleri        private void DataGridDoldur()        {            dataGridView1.DataSource = _urunServices.GetAllStoktakilerwithMarkaKategori();            DataGridStyle.DatagridviewSetting(dataGridView1);            dataGridView1.Columns[0].Visible = false; //Id            dataGridView1.Columns[1].HeaderText = "Barkod No"; //BarkodNo            dataGridView1.Columns[2].HeaderText = "Urun Adı"; //UrunAdi            dataGridView1.Columns[3].HeaderText = "Marka Kod"; //MarkaID            dataGridView1.Columns[3].Visible = false; //MarkaID            dataGridView1.Columns[4].HeaderText = "Marka Adı "; //Marka Adı            dataGridView1.Columns[5].HeaderText = "Ağırlık Cinsi "; //Marka Adı            dataGridView1.Columns[6].HeaderText = "Tane Ağırlık"; //taneağırlık            dataGridView1.Columns[7].HeaderText = "Stok"; //stok            dataGridView1.Columns[8].HeaderText = "Satış Fiyatı"; //fiyat            dataGridView1.Columns[9].Visible = false;//Kategoriıd            dataGridView1.Columns[10].HeaderText = "Kategori Adı"; //Miktar            dataGridView1.Columns[11].Visible = false; //resim            dataGridView1.Columns[12].Visible = false; //resimyolu            dataGridView1.Columns[13].HeaderText = "Alış Fiyatı"; //resimyolu        }        private void button3_Click(object sender, EventArgs e)        {            DataGridDoldur();        }        private void MiktarTuruDoldur()        {            comboBox_miktarcesidi.DataSource = MiktarTuruEnum.MiktarTurleri();        }        private void KategoriComboDoldur()        {            comboBox_kategori.DisplayMember = "KategoriAdi";            comboBox_kategori.ValueMember = "Id";            comboBox_kategori.DataSource = _kategoriServices.GetAll();        }        private void comboBox_kategori_SelectedIndexChanged(object sender, EventArgs e)        {            comboBox_markaadi.DisplayMember = "MarkaAdi";            comboBox_markaadi.ValueMember = "Id";            comboBox_markaadi.DataSource = _markaServices.SeciliKategori(Convert.ToInt32(comboBox_kategori.SelectedValue));                  }        #endregion        #region Ürün Ekleme İşlemleri        private void button_ekle_Click(object sender, EventArgs e)        {            try            {                if (Convert.ToInt32(comboBox_markaadi.SelectedValue) ==0)
                {
                    MessageBox.Show("Lütfen Bir Marka Seçiniz");
                    return;
                }                //aynı Barkodlu ürün varmı için oluşturuduğum sorgu                var uzerineEkleme = _urunServices.AynıBarkodMu(textBox_BarkodNo.Text);                if (uzerineEkleme == true) //aynı barkodta bir ürün var ise stokta üzerine eklenilicek                {                    var varolanMiktar = _urunServices.GetBarkodNo(textBox_BarkodNo.Text);                    varolanMiktar.MiktarSayisi = Convert.ToDecimal(textBox_miktar.Text) + varolanMiktar.MiktarSayisi;                    //üzerine ürün eklenerekten güncellenecek ürün                    var result = MessageBox.Show("Bu Ürünü Eklemek İstediğinize Emin Misiniz", "Ürün Ekleme", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);                    if (result == DialogResult.OK)                    {                        _urunServices.Update(varolanMiktar);                        DataGridDoldur();                        FormTemizle();                    }                }                else                      //eğer aynı barkodta ürün yok ise stokta yeni ürün oluşturulucak                {                    Urun urun = new Urun();                    urun.BarkodNo = textBox_BarkodNo.Text;                    urun.UrunAdi = textBox_urunadı.Text;                    urun.KategoriID = Convert.ToInt32(comboBox_kategori.SelectedValue);                    urun.MarkaID = Convert.ToInt32(comboBox_markaadi.SelectedValue);                    urun.MiktarTuru = comboBox_miktarcesidi.Text;                    urun.MiktarSayisi = Convert.ToDecimal(textBox_miktar.Text);                    if (textBox_taneagirlik.Text != "")                    {                        urun.MiktarTane = Convert.ToDecimal(textBox_taneagirlik.Text);                    }                    urun.AlisFiyati = Convert.ToDecimal(textBox_alisfiyati.Text);                    urun.SatisFiyati = Convert.ToDecimal(textBox_satisfiyati.Text);                    urun.ResimYolu = textBox_resimyolu.Text;                    var result = MessageBox.Show("Bu Ürünü kaydetmek İstediğinize Emin Misiniz", "Ürün Ekleme", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);                    if (result == DialogResult.OK)                    {
                        //Kaydedilen Resmin Dizin içerisine alınması gerekiyor
                        //Urun kaydetme aşamasıan geçilirse resim Ana dizinin içerisindeki Debug a Kopyalanıyor
                        string ResimFile = Path.GetFileName(pictureBox1.ImageLocation);
                        string ResimPath = Path.Combine(Application.StartupPath + "\\img\\" + ResimFile);
                        File.Copy(pictureBox1.ImageLocation, ResimPath, true);


                        urun.EklenmeTarihi = DateTime.Now;                        _urunServices.Add(urun);                        DataGridDoldur();                        FormTemizle();                    }                }            }            catch (Exception)            {                MessageBox.Show("Ürün Girerken Bir Hata Oluştu Lütfen Tüm Alanları Eksiksiz Girdiğinizden Emin olun");            }                           }        #endregion        #region Form Temizleme İşlemi        private void FormTemizle()        {            textBox_alisfiyati.Clear();            textBox_BarkodNo.Clear();            textBox_miktar.Clear();            textBox_resimyolu.Clear();            textBox_satisfiyati.Clear();            textBox_taneagirlik.Clear();            textBox_urunadı.Clear();            comboBox_kategori.Text = "Kategori Seçiniz!";            comboBox_markaadi.Text = "Marka Seçiniz!";            comboBox_miktarcesidi.Text = "Miktar Çeşidi Seçiniz!";            pictureBox1.Image = Image.FromFile(@"..\..\Resimler\urun2.png");            textBox_BarkodNo.Focus();        }        private void button_temizle_Click(object sender, EventArgs e)        {            FormTemizle();        }               #endregion        private void button_resimyolu_Click(object sender, EventArgs e)        {            openFileDialog1.Title = "Ürün Resmi Seçiniz";            //   | işretinin solu görünen yazı sağındaki ise filteri ysapıyor            openFileDialog1.Filter = "JPEG Dosyaları (*.jpeg)|*.jpeg|Bitmap Dosyaları (*.bmp)|*.bmp|PNG Dosyaları (*.png)|*.png|JPG Dosyaları (*.jpg)|*.jpg ";            
            
            if (openFileDialog1.ShowDialog() == DialogResult.OK) //Resim ekleme sayfasında Tamam işlemi yapılırsa çalışıcak
            {
                pictureBox1.ImageLocation = openFileDialog1.FileName;
                textBox_resimyolu.Text = openFileDialog1.FileName;
            }

                  }        #region DataGridView'den verilerin okunması        int UrunID = 0;        private void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)        {            UrunID =Convert.ToInt32( dataGridView1.Rows[e.RowIndex].Cells[0].Value);            textBox_BarkodNo.Text = dataGridView1.Rows[e.RowIndex].Cells[1].Value.ToString();            textBox_urunadı.Text = dataGridView1.Rows[e.RowIndex].Cells[2].Value.ToString();            comboBox_kategori.SelectedValue = dataGridView1.Rows[e.RowIndex].Cells[9].Value;            //comboBox_markaadi.SelectedValue = dataGridView1.Rows[e.RowIndex].Cells[3].Value;                                 comboBox_miktarcesidi.Text = dataGridView1.Rows[e.RowIndex].Cells[5].Value.ToString();            textBox_taneagirlik.Text = dataGridView1.Rows[e.RowIndex].Cells[6].Value.ToString();            textBox_miktar.Text = dataGridView1.Rows[e.RowIndex].Cells[7].Value.ToString();            textBox_satisfiyati.Text = dataGridView1.Rows[e.RowIndex].Cells[8].Value.ToString();            textBox_resimyolu.Text = dataGridView1.Rows[e.RowIndex].Cells[12].Value.ToString();            if (textBox_resimyolu.Text =="")            {                pictureBox1.Image = Image.FromFile(@"..\..\Resimler\urun2.png");            }            else            {                pictureBox1.Image = Image.FromFile(dataGridView1.Rows[e.RowIndex].Cells[12].Value.ToString());            }            textBox_alisfiyati.Text = dataGridView1.Rows[e.RowIndex].Cells[13].Value.ToString();        }        #endregion        #region Ürün Arama İşlemleri        int sayac = 0;        DataGridViewCell ilkaranan;        private void textBox_arama_TextChanged(object sender, EventArgs e)        {            string aranan = textBox_arama.Text.Trim().ToUpper();            for (int i = 0; i <= dataGridView1.Rows.Count - 1; i++)            {                foreach (DataGridViewRow row in dataGridView1.Rows)                {                    foreach (DataGridViewCell cell in dataGridView1.Rows[i].Cells)                    {                        if (cell.Value != null)                        {                            if (cell.Value.ToString().ToUpper() == aranan)                            {                                if (sayac == 0)                                {                                    if (ilkaranan != null)                                    {                                        ilkaranan.Style.BackColor = Color.Black;                                    }                                    cell.Style.BackColor = Color.Red;                                    ilkaranan = cell;                                    sayac++;                                    return;                                }                                if (sayac == 1)                                {                                    ilkaranan.Style.BackColor = Color.Black;                                    cell.Style.BackColor = Color.Red;                                    ilkaranan = cell;                                    sayac = 0;                                }                            }                        }                    }                }            }        }        //Temizle Butonu        private void button1_Click(object sender, EventArgs e)        {            DataGridDoldur();            textBox_arama.Clear();        }        #endregion          #region Pencere Boyutunun Kontrolü        int boyutsayaci = 0;        private void timer1_Tick(object sender, EventArgs e)        {            Font eski = this.Font;            if (PencereDurumu.state == FormWindowState.Maximized)            {                if (boyutsayaci == 0)                {                    this.Font = new Font(eski.FontFamily, eski.Size + 5, eski.Style);                    boyutsayaci++;                    return;                }            }            if (PencereDurumu.state == FormWindowState.Normal)            {                if (boyutsayaci == 1)                {                    this.Font = new Font(eski.FontFamily, eski.Size - 5, eski.Style);                    boyutsayaci--;                    return;                }            }        }        #endregion        #region Stoktan Düş         private void button_stoktandus_Click(object sender, EventArgs e)        {            try            {                if (textBox_BarkodNo.Text == "")                {                    MessageBox.Show("Lütfen bir ürün barkodu giriniz!", "Barkod Numarası Eksik", MessageBoxButtons.OK, MessageBoxIcon.Information);                  }                else                {                    var varolanMiktar = _urunServices.GetBarkodNo(textBox_BarkodNo.Text);                    varolanMiktar.MiktarSayisi = varolanMiktar.MiktarSayisi - Convert.ToDecimal(textBox_miktar.Text);                    //stoktaki ürüün miktarı düşülen ile birlikte silinerek güncellenecek ürün                    var result = MessageBox.Show($"{textBox_miktar.Text} adet ürünü stoktan düşmek istediğinize Emin Misiniz", "Stoktan Ürün Düşme", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);                    if (result == DialogResult.OK)                    {                        _urunServices.Update(varolanMiktar);                        DataGridDoldur();                        FormTemizle();                    }                }            }            catch (Exception)            {                MessageBox.Show("Ürün Girerken Bir Hata Oluştu Lütfen Tüm Alanları Eksiksiz Girdiğinizden Emin olun");            }                  }        #endregion        #region Depodan Kaldır        private void button_sil_Click(object sender, EventArgs e)        {            try            {                if (textBox_BarkodNo.Text =="")//Barkod Numarası boş işlem yapılamya kalkışılırsa diye                 {                    MessageBox.Show("Lütfen bir ürün barkodu giriniz!", "Barkod Numarası Eksik", MessageBoxButtons.OK, MessageBoxIcon.Information);                }                else //barkod numarası dolu geldi ise                 {                    if (UserDetailBus.RolID==1) //Admin Sisteme Giriş yapmıştır                    {                                                                      var urun = _urunServices.GetBarkodNo(textBox_BarkodNo.Text);                        if (urun != null) //urun depoda var ise işleme devam edilir                        {                            var result = MessageBox.Show($"{UserDetailBus.KullaniciName} bu ürünü depodan kaldırmak istediğinize emin misiniz?", "Depodan Ürün Kaldırılamsı", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);                            if (result == DialogResult.OK)                            {                                _urunServices.Delete(urun.Id);                                DataGridDoldur();                                FormTemizle();                            }                                               }                        else //Depoda ürün yok ise uyarı verilicek                        {                            MessageBox.Show("Bu ürün depoda mevcut değil!");                        }                    }                    if (UserDetailBus.RolID ==3) //Personel Sisteme Giriş Yapmıştır                    {                                             var result = MessageBox.Show($"{UserDetailBus.KullaniciName} bu ürünü depodan kaldırmak istediğinize dair onay işlem süreci başlatılsın mı?", "Depodan Ürün Kaldırılamsı", MessageBoxButtons.OKCancel, MessageBoxIcon.Question);                        if (result == DialogResult.OK)                        {                            //Admin e Onay bekleniyor maili gönderilicek                            MailGonderme.AdminMailGonderme mail = new MailGonderme.AdminMailGonderme();                            string Mesajımız = $"{UserDetailBus.KullaniciName } isimli Personel Depodan {textBox_BarkodNo.Text} Barkod Numaralı Ürünün Kaldırılaması Yönünde Bir Talepte Bulundu!";                            string Baslik = "Depodan Ürün Silme İşlem Talebi";                                               mail.AdminMesaj(Baslik, Mesajımız); //Adminlere Mail Gönderildi                            MailGonderme.MusteriMailGonderme mail2 = new MailGonderme.MusteriMailGonderme();                            string Mesajımız2 = $"{UserDetailBus.KullaniciName }  Depodan {textBox_BarkodNo.Text} Barkod Numaralı Ürünün Kaldırılaması Yönündeki Talebiniz Yönetim Tarafına İletildi!";                            string Baslik2 = "Depodan Ürün Silme İşlem Talebi";                            string Mail2 = UserDetailBus.Mail;                            mail2.Mesaj(Baslik2, Mesajımız2, Mail2); //Personele Bilgilendirme Mail Gönderildi                        }                    }                                    }            }            catch (Exception ex)            {                throw ex;            }        }        #endregion        #region Stoğu Biten Ürünleri Listeleme        private void button2_Click(object sender, EventArgs e)        {            dataGridView1.DataSource = _urunServices.GetAllStokBiten();            DataGridStyle.DatagridviewSetting(dataGridView1);            dataGridView1.Columns[0].Visible = false; //Id            dataGridView1.Columns[1].HeaderText = "Barkod No"; //BarkodNo            dataGridView1.Columns[2].HeaderText = "Urun Adı"; //UrunAdi            dataGridView1.Columns[3].HeaderText = "Marka Kod"; //MarkaID            dataGridView1.Columns[3].Visible = false; //MarkaID            dataGridView1.Columns[4].HeaderText = "Marka Adı "; //Marka Adı            dataGridView1.Columns[5].HeaderText = "Ağırlık Cinsi "; //Marka Adı            dataGridView1.Columns[6].HeaderText = "Tane Ağırlık"; //taneağırlık            dataGridView1.Columns[7].HeaderText = "Stok"; //stok            dataGridView1.Columns[8].HeaderText = "Satış Fiyatı"; //fiyat            dataGridView1.Columns[9].Visible = false;//Kategoriıd            dataGridView1.Columns[10].HeaderText = "Kategori Adı"; //Miktar            dataGridView1.Columns[11].Visible = false; //resim            dataGridView1.Columns[12].Visible = false; //resimyolu            dataGridView1.Columns[13].HeaderText = "Alış Fiyatı"; //resimyolu        }        #endregion        #region Ürün Güncelleme İşlemi        private void button_guncelle_Click(object sender, EventArgs e)        {            try            {                var guncellenicekUrun = _urunServices.GetBarkodNo(textBox_BarkodNo.Text);                if (guncellenicekUrun == null)                {                    MessageBox.Show("Lütfen Stoktaki Bir Ürün Barkodu Giriniz");                }                else                {                     var soru = MessageBox.Show($"{guncellenicekUrun.BarkodNo} Barkod Numaralı Ürünün Bilgilerini Güncellemek İstediğinize Emin Misiniz?","Ürün Güncelleme",MessageBoxButtons.OKCancel,MessageBoxIcon.Question);                    if (soru == DialogResult.OK)                    {                        guncellenicekUrun.UrunAdi = textBox_urunadı.Text;                        guncellenicekUrun.KategoriID = Convert.ToInt32(comboBox_kategori.SelectedValue);                        guncellenicekUrun.MarkaID = Convert.ToInt32(comboBox_markaadi.SelectedValue);                        guncellenicekUrun.MiktarTuru = comboBox_miktarcesidi.Text;                        guncellenicekUrun.MiktarSayisi = Convert.ToDecimal(textBox_miktar.Text);                        if (textBox_taneagirlik.Text != "")                        {                            guncellenicekUrun.MiktarTane = Convert.ToDecimal(textBox_taneagirlik.Text);                        }                        guncellenicekUrun.AlisFiyati = Convert.ToDecimal(textBox_alisfiyati.Text);                        guncellenicekUrun.SatisFiyati = Convert.ToDecimal(textBox_satisfiyati.Text);                        guncellenicekUrun.ResimYolu = textBox_resimyolu.Text;                        guncellenicekUrun.EklenmeTarihi = DateTime.Now;                        _urunServices.Update(guncellenicekUrun);                        DataGridDoldur();                        FormTemizle();                                          }                                   }            }            catch (Exception)            {                MessageBox.Show("Guncelleme İşlemi Yapılırken Bir Sorun Oluştu Lütfen Bilgilei Eksiksiz Girdiğinziden Emin Olun =-?");            }              }    }    #endregion}